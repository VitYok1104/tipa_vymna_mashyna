import random as rd


# порогове значення
thersold = .5
#print('порогове значення : ' + str(thersold))

#значення коефіцєнта ню
ny1 = .05
ny2 = .1
ny3 = .00003
#print('вагові коефіцієнти : ' + str(ny1) + '  ' + str(ny2) + '  ' + str(ny3))

#Матриця всього
X =        [ [0, 0, 0, 0, 1, 1, 1, 1],   #поле початкової матриці
                [0, 0, 1, 1, 0, 0, 1, 1],   #поле початкової матриці
                [0, 1, 0, 1, 0, 1, 0, 1],   #поле початкової матриці
                [0, 0, 0, 0, 0, 0, 0, 0],   #поле істинності                        T
                [0, 0, 0, 0, 0, 0, 0, 0]]   #поле суми добутків                 Y
#print('матриця на6ору вхідних даних : ' + str(X[:][:3]))


#перевірка порогового значення
def out_Y(a, b, c):                     
    if a > thersold:
        X [c][b] = 1
    else:
        X [c][b] = 0


def logic_operation_T(X):
    '''імплікація -->
       if елемент 1 множини = 1, а 2 = 0 то значення = 0
       У всіх інших випадках значення = 1'''
    с = 0 
    for loop in range(8):
        if  X [0][с] == 1 and X [1][с] == 0 :
            X [1][с] = 0
        else:
            X [1][с] = 1
        с += 1
    '''диз'юнкція \/
      if хоч 1 елемент з двох множин = 1, то 1
      if обидва елементи = 0. то 0'''

    '''порівняння проводим з попередднім списком і останнім
      записуєм в 4 строку''' 
    n = 0
    for loop in range(8):
        if  X [1][n] == 0 and X [2][n] == 0 :
            X [3][n] = 0
        else:
            X [3][n] = 1
        n +=1
#    print('таблиця істинності : '+ str(X [3][:]))

#розрахунок суми добутків (а)
def neyro_Y(w1, w2, w3):
    a = 0
    b = 0
    c = 4  #запис в поле значень Y
    for element in range(8):
        a = X [0][b] * w1+ X [1][b] * w2 + X [2][b] * w3
        out_Y(a, b, c)
        b += 1
        #print(a)

#головна функція
def repeat():
    #рандомні вагові коефіцієнти
    w1 = rd.random()
    w2 = rd.random()
    w3 = rd.random()

    n = 1000000
    step = 0

    logic_operation_T(X)
    neyro_Y(w1, w2, w3)
    
    print(str(X [4][:]) + '  чекає обробки')
    print(str(X [3][:]) + '  еталон' + '\n')
    
    while step < n :
        b = 0
        for check in range(8):
            if X [3][b] != X [4][b] :                                            #порівння 2 строк
                w1 += ny1 * X [0][b] * (X [3][b] - X [4][b])
                w2 += ny1 * X [1][b] * (X [3][b] - X [4][b])
                w3 += ny1 * X [2][b] * (X [3][b] - X [4][b])
                neyro_Y(w1, w2, w3)                                           #перерахунок і перезапис нових даних
            b += 1
        #первірка схожості. if співпали то завершення, ні - +1 крок  до циклу
        if X [3][:] == X [4][:] :
            break
        else:
            step += 1
        print(step)

repeat()
print(str(X [4][:]) + '  оброблене')
print(str(X [3][:]) + '  еталон')
